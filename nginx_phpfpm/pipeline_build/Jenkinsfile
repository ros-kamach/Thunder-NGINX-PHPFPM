properties(
    [[$class: 'BuildDiscarderProperty',strategy: 
     [$class: 'LogRotator', numToKeepStr: '10']],
      pipelineTriggers([pollSCM('H/5 * * * *')]),]
)
pipeline {
    agent any

    stages {
        stage('Thunder_Image_Build') {
            steps {
                script {
                    openshift.withCluster() {
                        openshift.withCredentials() {
                            openshift.withProject() {
                                checkout([$class           : 'GitSCM',
                                            branches         : [[name: "*/${PS_GIT_REF}"]],
                                            userRemoteConfigs: [[url: "${PS_GIT_URI}"]]
                                ]);
                                dir("${WORKSPACE}") {
                                    def commit_id = sh(returnStdout: true, script: 'git rev-parse --short HEAD').trim()
                                    echo "${commit_id}"
                                    def builder = new com.openshift.jenkins.plugins.pipeline.OpenShiftBuilder("", "ticket-monster", "demo", "", "", "", "", "true", "", "")
                                }
                            }
                        }
                    }
                }
                echo "333" 
                echo "123"
                openshiftBuild(bldCfg: 'thunder-alpine', showBuildLogs: 'true')
            }
        }
    }
}
